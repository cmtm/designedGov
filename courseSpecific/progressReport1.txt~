Name:           Chris Morin
email:          christopher.morin@mail.mcgill.ca
ID:             260344722

Project title:  designedGov

Project supervisor: Bettina Kemme (Computer Science)

================
Adviser meetings
================

I've only met with my adviser once. The rest of our correspondences have been through email. I have a pretty good idea of where I'm heading and most of then next few weeks are going to consist on learning new technologies needed to develop designedGov. We probably will only meet once in the next few weeks.

===============
Project Reading
===============

There are two categories of literature I need to review for this project. The first is literature about eGovernance specifically: what has been done, what has/hasn't worked, what software is already available.... The other category of literature is learning about the technologies and existing open source software I believe I will need to develop designedGov.
	
In the first category, eGovernance literature, I found a lot of material that I found lacked substance. There were conferences, best practice standards, frameworks, guidelines, transition models, policy analyses, vague initiatives, etc., but there weren't very many applications or even discussions about real implementations. There are countries with eGovernment applications which are quite comprehensive, but there is little publicly available documentation on them. I contacted a few of the eGovernment departments and I was told the application is closed source. They did point me to some documentation on their public website, but it was very non-technical and was more of a platform to promote their application as opposed to learn about it. Their user authentication system wasn't clear; this is the opposite of what I wish to do. I won't include all of the documentation I sifted through that I didn't use.

There were two interesting eGov projects I'll be looking into though. The fist is called free-gov [1]. It's a open source software application with similar aspects to designedGov; it seems to be targeted to municipal governments though. Although the project seems dead, I've contacted the project leader and might be able to find some useful insights in their code. The second application is Korea's eGovernment Standard Framework [2]. This framework defines how government applications are supposed to communicate with each other. This project is actually used in Korea and so it will be very useful to study it; South Korea seems to be the world leader in terms of eGovernment services.


The second category of literature (technologies and existing OS tools) will constitute the bulk of not only my literature review but the bulk of the first part of my honor's thesis. The basic technologies I need to learn are networking, databases, cryptography and web development (including UI design). Although nothing is written in stone yet, I suspect my project will use some of the following protocols/tools: TLS/SSL, Python standard libraries, PyCrypto,  Django web framework, HTML 5/CSS, JavaScript. I'll need to decide sometime in the future what protocol I'll be using to communicate information between government organizations.

I'm currently reading and have almost completed "Computer Networking: A top down approach" [3] which will give me a good understanding of networking and cryptography basics. I will then read "The Django Book" [4] to be able to start developing an actual application. From there, I'll read up on various technologies as needed.

[1] http://free-gov.org
[2] http://www.egovframe.go.kr
[3] Kurose, James F., and Keith W. Ross. Computer networking: a top-down approach. 5th ed. Boston: Addison-Wesley, 2010.
[4] http://www.djangobook.com


===============
Recent Progress
===============

I spent a lot of time on the "proposal.txt" file attached in this email. It consists mostly of the motivation of the project and guiding principles I wish it to follow. There is also a section on my current ideas about the structure of designedGov, but I expect this to change. I've also completed the setup of the machine I'll be developing on. It's fully loaded with Arch Linux and loaded with most of the software development tools I'll need. I needed to learn to use git and I set up a repository on gitHub. My time since then has been spent in literature review. I elaborate on this in the section above, but suffice to say that I've done looking for preliminary literature and am at the stage of absorbing what I've found was useful.

============
Future Plans
============

I'll finish off the preliminary literature review, that is the computer networking book [3]. I expect to find that the chapter on network security won't be sufficient and I'll have to read a bit about cryptography from another source. Once this is done, I can start to design the application architecture. In parallel with this, I can review the two applications ([1] & [2]). I don't expect to get farther than an architecture draft, but if I do finish early, I can work on learning the Django web framework which will be the main technology designedGov's top layer will be implemented with.

================
Project Overview
================

A good project overview can be found in "proposal.txt". I'll summarize it here.

I want to create an application which will simplify how a government interacts with the persons and organizations that wish to interact with it. There will be several layers in this application, each building upon the lower layer in a stack like fashion (think of the Internet protocol suite). The application will be secure, robust and be built with expandability for unforeseen future needs. This project will specifically be built with the Canadian government (and the governments below it) in mind but it will be very "government neutral" and should be easily adapted to other governments.

An important aspect of this application is that persons and organizations will be able to access almost all government services through a single online portal while only needing to keep track of a single set of account details (user name and password).

Already, the government is implementing and rolling out digital services or digital front ends to their services. It would therefore be fair to ask why I feel the need to create this application. My answer is that the way government services evolve is very bad. They build upon previous iterations and all evolve mostly independently (and dependently in some bad ways) so that at the end of it you have a bunch of scattered systems where most of the design decisions weren't made to increase usability but to fit into the existing one. This is a pain for the end user as they need to not only learn how to use all these systems but it also makes them need to keep track of many different account details. Although this might seem like a mere inconvenience (which is enough for me to justify this system, but not for others), this system has the pitfall of being very insecure.

If designedGov is implemented by Canada, the amount of red tape and administrative costs associated with our government will fall significantly. This will also make interacting with the government much simpler and pleasant for Canadians. I'm realistic in that I don't expect the federal government to actually adopt designedGov, but I'll focus on creating a demo application that I can use to show Canadians what we can do and how much easier it can make things. This will hopefully incite discussion about Canada's eGovernment services and how we can improve them.
